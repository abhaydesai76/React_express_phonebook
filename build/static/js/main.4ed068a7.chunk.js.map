{"version":3,"sources":["Components/Notification.js","Components/Togglable.js","Services/personsService.js","Components/Phonebook.js","index.js"],"names":["Notification","message","className","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","style","onClick","buttonLabel","children","axios","get","then","response","data","newObject","post","id","put","delete","Filter","onChange","handleChange","PersonForm","Form","onSubmit","addPersonDetails","Table","striped","bordered","Text","muted","Control","value","newName","handleNameChange","newNumber","handleNumberChange","Button","type","App","persons","setPersons","setNewName","setNewNumber","filterName","setFilterName","errorMessage","setErrorMessage","useEffect","personService","catch","error","setTimeout","updatePersonDetails","updateObject","personToUpdate","filter","person","name","toLocaleLowerCase","map","Persons","personsToShow","i","key","number","DeletePerson","window","alert","find","n","indexOf","event","target","preventDefault","nameObject","confirm","concat","ReactDOM","render","Phonebook","document","getElementById"],"mappings":"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","file":"static/js/main.4ed068a7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  \r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible} className=\"togglableContent\">\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default Togglable","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\n// const baseUrl = 'https://express-node-phonebook.herokuapp.com/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button } from 'react-bootstrap'\r\nimport personService from '../Services/personsService'\r\nimport Notification from '../Components/Notification'\r\n// import '../../src/index.css'\r\n\r\nconst Filter = (props) =>\r\n{\r\n    return (\r\n        <div>\r\n            filter shown with <input onChange={props.handleChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PersonForm = (props) =>\r\n{\r\n    return (\r\n        <div>   \r\n            <Form onSubmit={props.addPersonDetails}>                \r\n                <Table striped bordered>         \r\n                    <thead></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <Form.Text muted><b>Name :</b></Form.Text>\r\n                            </td>\r\n                            <td>                                \r\n                                <Form.Control value={props.newName} onChange={props.handleNameChange}/>                                \r\n                            </td>                            \r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <Form.Text muted><b>Number :</b></Form.Text>\r\n                            </td>\r\n                            <td>                                \r\n                                <Form.Control value={props.newNumber} onChange={props.handleNumberChange}/>                                \r\n                            </td>                            \r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <div>\r\n                                    <Button type=\"submit\">Add</Button>\r\n                                </div>\r\n                            </td>                            \r\n                        </tr>\r\n                    </tbody>        \r\n                </Table>\r\n            </Form>                        \r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () =>\r\n{\r\n    const [persons,setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')    \r\n    const [filterName, setFilterName]  = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const handleNameChange = (event) =>\r\n    {        \r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handleNumberChange = (event) =>\r\n    {        \r\n        setNewNumber(event.target.value);\r\n    }\r\n\r\n    const handleNameFilter = (event) =>\r\n    {        \r\n        setFilterName(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        personService.getAll()\r\n            .then(response  => {\r\n                setPersons(response)\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.error)\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n              })\r\n        }, [])\r\n\r\n    const addPersonDetails = (event) =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const nameObject = {            \r\n            name: newName,          \r\n            number: newNumber,\r\n        }\r\n\r\n        if (persons.find( ({name}) => name.toLocaleLowerCase() === newName.toLocaleLowerCase()))\r\n        {\r\n            // window.alert(`${newName} is already added to phonebook`)\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) === true)\r\n            {\r\n                window.alert(`time to update record`)\r\n                \r\n                updatePersonDetails(persons,nameObject)\r\n            }\r\n            else\r\n            {\r\n                window.alert(`doesn't want to update`)\r\n            }\r\n        }\r\n        else{\r\n            setPersons(persons.concat(nameObject))\r\n\r\n            personService.create(nameObject)\r\n            .then(response => {\r\n                setPersons(persons.concat(response))\r\n                setNewName('')\r\n                setNewNumber('')\r\n                setErrorMessage(`Added ${newName}`)\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n            })\r\n            .catch(error => {                \r\n                setErrorMessage(\r\n                    error.response.data.error\r\n                  )\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n                  setPersons(persons)\r\n              })              \r\n        }\r\n    }\r\n\r\n    const updatePersonDetails = (persons,updateObject) =>\r\n    {\r\n        const personToUpdate = persons.filter(person => person.name.toLocaleLowerCase() === updateObject.name.toLocaleLowerCase())\r\n\r\n        personService.update(personToUpdate[0].id, updateObject)\r\n            .then(response => {            \r\n            setPersons(persons.map(person => person.id !== response.id ? person : response))                       \r\n            setNewName('')\r\n            setNewNumber('')\r\n            setErrorMessage(`Updated ${updateObject.name}`)\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.error)\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n                  setPersons(persons.filter(person => person.id !== personToUpdate[0].id))\r\n            })\r\n    }\r\n\r\n    const Persons = (props) =>\r\n    {\r\n        return (\r\n            <div>\r\n                <Table striped bordered>\r\n                    <thead></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><b>Name</b></td>\r\n                            <td><b>Number</b></td>\r\n                            <td><b>Action</b></td>\r\n                        </tr>\r\n                        {props.personsToShow.map((person,i) => \r\n                        <tr key={i}>\r\n                            <td>{person.name}</td>\r\n                            <td>{person.number}</td>\r\n                            <td><Button onClick={ () => DeletePerson(props.personsToShow, person.id)}>Delete</Button></td>\r\n                        </tr>)}\r\n                    </tbody>                \r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const DeletePerson = (persons, id) =>\r\n    {\r\n        window.alert(`Delete ` + persons.find(n => n.id === id).name + ` with id ${id} ?`)        \r\n        const personsToShow = persons.filter(person => person.id !== id)                         \r\n\r\n        personService.remove(id)\r\n        .then(response => {            \r\n            setNewName('')\r\n            setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n            setErrorMessage(error.response.data.error)\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n          })             \r\n\r\n          setPersons(personsToShow)\r\n    }\r\n\r\n    const personsToShow = filterName === \"\" ?  persons : persons.filter(person => person.name.toLocaleLowerCase().indexOf(filterName.toLocaleLowerCase()) !== -1);   \r\n\r\n    return (\r\n        <div>\r\n            <Table striped bordered>\r\n                <thead>\r\n                    <h2>Phonebook</h2>\r\n                </thead>\r\n                <tbody>                \r\n                    <tr>\r\n                        <Notification message={errorMessage} />\r\n                    </tr>        \r\n                    <tr>\r\n                        <Filter handleChange={handleNameFilter}/>\r\n                    </tr>\r\n                    <tr>\r\n                    <h3>Add a new person & number</h3>\r\n                        <PersonForm newName={newName} newNumber={newNumber}\r\n                                addPersonDetails={addPersonDetails}\r\n                                handleNameChange={handleNameChange}\r\n                                handleNumberChange={handleNumberChange}/>\r\n                    </tr>\r\n                    <tr>\r\n                        <h3>Numbers</h3>\r\n                        <Persons personsToShow={personsToShow} />\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport Phonebook from './Components/Phonebook'\r\nimport Countries from './Components/Countries'\r\nimport Bayzat from './Components/Bayzat'\r\n\r\nReactDOM.render(\r\n  <Phonebook />,document.getElementById('root'))\r\n  // <Countries />,document.getElementById('root'))\r\n  // <App />,document.getElementById('root'))\r\n  // <Bayzat values={6}/>,document.getElementById('root'))\r\n\r\n  // const Logout = (event) => {\r\n  //   event.preventDefault()\r\n  //   window.localStorage.removeItem('loggedNoteappUser')\r\n  //   const user = null\r\n  //   setUser(user)\r\n  // }"],"sourceRoot":""}