{"version":3,"sources":["Components/Note.js","services/notesService.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","axios","get","then","response","data","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","initialNotes","notesToShow","filter","map","i","key","find","n","changedNote","returnedNote","catch","error","alert","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8NAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,4BACGH,EAAKI,QACN,4BAAQC,QAASJ,GAAmBC,KCW3B,EAfA,WAEb,OADgBI,IAAMC,IALR,cAMCC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KAVR,aAUsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAfF,aAeE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCwE5BK,EApFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRC,IAEGhB,MAAK,SAAAiB,GACJP,EAASO,QAEZ,IAEH,IAuCMC,EAAcL,EAChBJ,EACAA,EAAMU,QAAO,SAAA3B,GAAI,OAAIA,EAAKG,aAE9B,OACE,6BACE,qCACA,6BACE,4BAAQE,QAAS,kBAAMiB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGK,EAAYE,KAAI,SAAC5B,EAAM6B,GAAP,OACf,kBAAC,EAAD,CACEC,IAAKD,EACL7B,KAAMA,EACNC,iBAAkB,kBAvCD,SAACY,GACjB,sCAAkCA,GAA3C,IACMb,EAAOiB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAEnB,KAAOA,KAChCoB,EAAW,eAAQjC,EAAR,CAAcG,WAAYH,EAAKG,YAEhDqB,EACUX,EAAIoB,GACXzB,MAAK,SAAA0B,GACJhB,EAASD,EAAMW,KAAI,SAAA5B,GAAI,OAAIA,EAAKa,KAAOA,EAAKb,EAAOkC,SAEpDC,OAAM,SAAAC,GACLC,MAAM,aAAD,OACUrC,EAAKI,QADf,sCAGLc,EAASD,EAAMU,QAAO,SAAAK,GAAC,OAAIA,EAAEnB,KAAOA,SAyBRyB,CAAmBtC,EAAKa,WAItD,0BAAM0B,SA5DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBtC,QAASe,EACTwB,MAAM,IAAIC,MAAOC,cACjB1C,UAAW2C,KAAKC,SAAW,GAC3BlC,GAAII,EAAM+B,OAAS,GAGrBxB,EACUkB,GACPlC,MAAK,SAAA0B,GACJhB,EAASD,EAAMgC,OAAOf,IACtBd,EAAW,SAgDX,2BACE8B,MAAO/B,EACPgC,SA5BiB,SAACX,GACxBpB,EAAWoB,EAAMY,OAAOF,UA6BpB,4BAAQG,KAAK,UAAb,W,KC5ERC,IAASC,OAGP,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.cbd2d28c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li>\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n// const baseUrl = 'https://express-nodejs-notes.herokuapp.com/api/notes'\r\n// const baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Note from './Components/Note'\r\nimport noteService from './services/notesService'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]) \r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n  \r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const url = `http://localhost:3001/notes/${id}`\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n  \r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        alert(\r\n          `the note '${note.content}' was already deleted from server`\r\n        )\r\n        setNotes(notes.filter(n => n.id !== id))     \r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>      \r\n      <ul>\r\n        {notesToShow.map((note, i) => \r\n          <Note\r\n            key={i}\r\n            note={note} \r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>   \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App ","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Phonebook from './Components/Phonebook'\r\nimport Countries from './Components/Countries'\r\nimport RoughWork from './Components/RoughWork'\r\n\r\nReactDOM.render(\r\n  // <Phonebook />,document.getElementById('root'))\r\n  // <Countries />,document.getElementById('root'))\r\n  <App />,document.getElementById('root'))\r\n  // <RoughWork />,document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}