{"version":3,"sources":["services/personsService.js","Components/Notification.js","Components/Phonebook.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","Filter","props","onChange","handleChange","PersonForm","onSubmit","addPersonDetails","value","newName","handleNameChange","newNumber","handleNumberChange","type","App","useState","persons","setPersons","setNewName","setNewNumber","filterName","setFilterName","errorMessage","setErrorMessage","useEffect","personService","catch","error","setTimeout","updatePersonDetails","updateObject","personToUpdate","filter","person","name","toLocaleLowerCase","map","Persons","personsToShow","i","key","number","onClick","DeletePerson","window","alert","find","n","indexOf","event","target","preventDefault","nameObject","confirm","concat","ReactDOM","render","Phonebook","document","getElementById"],"mappings":"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","file":"static/js/main.1351eddd.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n// const baseUrl = 'http://localhost:3001/api/persons'\r\n// const baseUrl = 'https://express-node-phonebook.herokuapp.com/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className=\"error\">\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport personService from '../services/personsService'\r\nimport Notification from '../Components/Notification'\r\nimport '../../src/index.css'\r\n\r\nconst Filter = (props) =>\r\n{\r\n    return (\r\n        <div>\r\n            filter shown with <input onChange={props.handleChange}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PersonForm = (props) =>\r\n{\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.addPersonDetails}>\r\n                <div>\r\n                    name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n                </div>\r\n                <p />\r\n                <div>\r\n                    number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n                </div>\r\n                <p />\r\n                <div>\r\n                    <button type=\"submit\">Add</button>\r\n                </div>\r\n            </form>            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst App = () =>\r\n{\r\n    const [persons,setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')    \r\n    const [filterName, setFilterName]  = useState('')\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n    const handleNameChange = (event) =>\r\n    {        \r\n        setNewName(event.target.value);\r\n    }\r\n\r\n    const handleNumberChange = (event) =>\r\n    {        \r\n        setNewNumber(event.target.value);\r\n    }\r\n\r\n    const handleNameFilter = (event) =>\r\n    {        \r\n        setFilterName(event.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        personService.getAll()\r\n            .then(response  => {\r\n                setPersons(response)\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\r\n                    `Error occurred while retrieving person data from server`\r\n                  )\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n              })\r\n        }, [])\r\n\r\n    const addPersonDetails = (event) =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const nameObject = {            \r\n            name: newName,          \r\n            number: newNumber,\r\n        }\r\n\r\n        if (persons.find( ({name}) => name.toLocaleLowerCase() === newName.toLocaleLowerCase()))\r\n        {\r\n            // window.alert(`${newName} is already added to phonebook`)\r\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`) === true)\r\n            {\r\n                window.alert(`time to update record`)\r\n                \r\n                updatePersonDetails(persons,nameObject)\r\n            }\r\n            else\r\n            {\r\n                window.alert(`doesn't want to update`)\r\n            }\r\n        }\r\n        else{\r\n            setPersons(persons.concat(nameObject))\r\n\r\n            personService.create(nameObject)\r\n            .then(response => {\r\n                setPersons(persons.concat(response))\r\n                setNewName('')\r\n                setNewNumber('')\r\n                setErrorMessage(`Added ${newName}`)\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\r\n                    `Error occurred while saving person data on server`\r\n                  )\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n              })              \r\n        }\r\n    }\r\n\r\n    const updatePersonDetails = (persons,updateObject) =>\r\n    {\r\n        const personToUpdate = persons.filter(person => person.name.toLocaleLowerCase() === updateObject.name.toLocaleLowerCase())\r\n\r\n        personService.update(personToUpdate[0].id, updateObject)\r\n            .then(response => {            \r\n            setPersons(persons.map(person => person.id !== response.id ? person : response))                       \r\n            setNewName('')\r\n            setNewNumber('')\r\n            setErrorMessage(`Updated ${updateObject.name}`)\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(                    \r\n                    `The person '${updateObject.name}' was already deleted from server`\r\n                  )\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n                  setPersons(persons.filter(person => person.id !== personToUpdate[0].id))\r\n            })\r\n    }\r\n\r\n    const Persons = (props) =>\r\n    {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {props.personsToShow.map((person,i) => \r\n                        <li key={i}>{person.name} {person.number} <button onClick={ () => DeletePerson(props.personsToShow, person.id)}>delete</button></li>                    \r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const DeletePerson = (persons, id) =>\r\n    {\r\n        window.alert(`Delete ` + persons.find(n => n.id === id).name + ` with id ${id} ?`)        \r\n        const personsToShow = persons.filter(person => person.id !== id)                         \r\n\r\n        personService.remove(id)\r\n        .then(response => {            \r\n            setNewName('')\r\n            setNewNumber('')\r\n        })\r\n        .catch(error => {\r\n            setErrorMessage(\r\n                `Error occurred while deleting person data on server`\r\n              )\r\n              setTimeout(() => {\r\n                setErrorMessage(null)\r\n              }, 5000)\r\n          })             \r\n\r\n          setPersons(personsToShow)\r\n    }\r\n\r\n    const personsToShow = filterName === \"\" ?  persons : persons.filter(person => person.name.toLocaleLowerCase().indexOf(filterName.toLocaleLowerCase()) !== -1);   \r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            \r\n            <Notification message={errorMessage} />\r\n            \r\n            <Filter handleChange={handleNameFilter}/>\r\n            \r\n            <h3>Add a new</h3>\r\n            <PersonForm newName={newName} newNumber={newNumber}\r\n                    addPersonDetails={addPersonDetails}\r\n                    handleNameChange={handleNameChange}\r\n                    handleNumberChange={handleNumberChange}/>\r\n            \r\n            <h3>Numbers</h3>\r\n            <Persons personsToShow={personsToShow} />\r\n            \r\n        </div>\r\n    )    \r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Phonebook from './Components/Phonebook'\r\nimport Countries from './Components/Countries'\r\nimport RoughWork from './Components/RoughWork'\r\n\r\nReactDOM.render(\r\n  <Phonebook />,document.getElementById('root'))\r\n  // <Countries />,document.getElementById('root'))\r\n  // <App />,document.getElementById('root'))\r\n  // <RoughWork />,document.getElementById('root'))\r\n\r\n"],"sourceRoot":""}